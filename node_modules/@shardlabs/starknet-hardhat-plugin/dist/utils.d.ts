import { HardhatRuntimeEnvironment, HttpNetworkConfig, NetworksConfig } from "hardhat/types";
/**
 * Replaces Starknet specific terminology with the terminology used in this plugin.
 *
 * @param msg the log message to be adapted
 * @returns the log message with adaptation replacements
 */
export declare function adaptLog(msg: string): string;
/**
 * Adapts `url` by replacing localhost and 127.0.0.1 with `host.internal.docker`
 * @param url string representing the url to be adapted
 * @returns adapted url
 */
export declare function adaptUrl(url: string): string;
export declare function getDefaultHttpNetworkConfig(url: string, verificationUrl: string): HttpNetworkConfig;
export declare function traverseFiles(traversable: string, fileCriteria?: string): Promise<string[]>;
export declare function checkArtifactExists(artifactsPath: string): void;
/**
 * Extracts the network config from `hre.config.networks` according to `networkName`.
 * @param networkName The name of the network
 * @param networks Object holding network configs
 * @param origin Short string describing where/how `networkName` was specified
 * @returns Network config corresponding to `networkName`
 */
export declare function getNetwork(networkName: string, networks: NetworksConfig, origin: string): HttpNetworkConfig;
export declare function findPath(traversable: string, name: string): Promise<string>;
/**
 *
 * @param accountPath Path where the account file is saved
 * @param hre The HardhatRuntimeEnvironment
 * @returns Absolute where the account file is saved
 */
export declare function getAccountPath(accountPath: string, hre: HardhatRuntimeEnvironment): string;
